
plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
    id 'org.barfuin.gradle.jacocolog' version '1.2.4'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    api 'org.apache.httpcomponents:httpclient:4.5.12'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.0'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation 'org.mockito:mockito-core:3.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.11.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

group = "io.hanko"
project.version = System.getenv('CI_COMMIT_TAG') ?: "2.0.0-SNAPSHOT"
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
sourceCompatibility = '1.8'

sourceSets {
    test {
        java {
            srcDirs = ['src/test']
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)

            pom {
                name = "Hanko SDK Java"
                description = "Java SDK for accessing the Hanko Authentication API"
                url = "https://hanko.io"
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        organization = 'Hanko GmbH'
                        organizationUrl = 'https://hanko.io'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/teamhanko/hanko-sdk-java.git'
                    developerConnection = 'scm:git:ssh://github.com/teamhanko/hanko-sdk-java.git'
                    url = 'https://github.com/teamhanko/hanko-sdk-java'
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

signing {
    sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}